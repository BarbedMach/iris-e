stages:
  - build
  - docs
  - deploy_docs
  - test
  - dagger

.excl_runner:
  tags: [excl]

variables:
  IRIS_INSTALL_ROOT: $CI_PROJECT_DIR/install
  IRIS_TESTING_URL: code.ornl.gov/brisbane/iris-tests.git
  CONDA_ROOT: /auto/ciscratch/conda

build-job:
  extends: [.excl_runner]
  stage: build
  before_script:
    - module load cmake
    - module load gnu
  script:
    - echo "Installing iris to $CI_PROJECT_DIR/install"
    - bash build.sh
  artifacts:
    paths:
      - $IRIS_INSTALL_ROOT

docs-job:
  tags: [devdocs]
  stage: docs
  needs: []
  before_script:
    - source $CONDA_ROOT/etc/profile.d/conda.sh
    - conda env create --force -p ./envs -f docs/sphinx/environment.yml
    - conda activate ./envs
  script:
    - cd docs/sphinx/source
    - python -m sphinx -T -E -b html -d _build/doctrees -D language=en . _build/html
  artifacts:
    paths:
      - docs/sphinx/source/_build/html

.deploy_docs_common:
  tags: [devdocs]
  stage: deploy_docs
  needs: [docs-job]
  script:
    rsync -a --delete docs/sphinx/source/_build/html/ ~/www/brisbane/iris

deploy_docs-job:
  extends: .deploy_docs_common
  only:
    refs:
      - ornl_main

deploy_docs_manual-job:
  extends: .deploy_docs_common
  when: manual

test-job:
  extends: [.excl_runner]
  needs: []
  stage: test
  allow_failure: true
  before_script:
    - module load gnu
    - module load cmake
  script:
    - echo "Installing iris to $CI_PROJECT_DIR/install"
    - bash build-coverage.sh
    - echo $CI_REPOSITORY_URL
    - echo $CI_PROJECT_PATH
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${IRIS_TESTING_URL}
    - source $IRIS_INSTALL_ROOT/setup.source
    - cd iris-tests
    - mkdir build
    - cd build
    - cmake ..
    - make --ignore-errors
    - make test
  after_script:
    - module load cmake
    - module load gnu
    - module load python
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install gcovr==5.0 # There seems to be a bug for newer versions of gcovr.
    - gcovr --xml-pretty --exclude-unreachable-branches --print-summary -o coverage.xml --gcov-ignore-parse-errors
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    when: always
    paths:
      - iris-tests/build/Testing/Temporary/LastTest.log
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test-job-zenith:
  tags: [zenith]
  needs: []
  stage: test
  allow_failure: true
  before_script:
    - source /auto/software/iris/setup_system.source
  script:
    - echo "Installing iris to $IRIS_INSTALL_ROOT"
    - bash build-coverage.sh
    - echo $CI_REPOSITORY_URL
    - echo $CI_PROJECT_PATH
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${IRIS_TESTING_URL}
    - source $IRIS_INSTALL_ROOT/setup.source
    - cd iris-tests
    - mkdir build
    - cd build
    - cmake ..
    - make --ignore-errors
    - make test
  after_script:
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install gcovr==5.0 # There seems to be a bug for newer versions of gcovr.
    - gcovr --xml-pretty --exclude-unreachable-branches --print-summary -o coverage.xml --gcov-ignore-parse-errors
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    when: always
    paths:
      - iris-tests/build/Testing/Temporary/LastTest.log
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

.dagger:
  tags: [slurm]
  stage: dagger
  needs: [build-job]

.run-policy-evaluations-artifacts:
  artifacts:
    when: always
    paths:
      - apps/dagger/dagger-figures/*.csv
      - slurm*.txt
      - errors.txt

.test-correctness-artifacts:
  artifacts:
    when: always
    paths:
      - slurm*.txt
      - errors.txt

dagger-zenith-run-policy-evaluations:
  extends: [.dagger, .run-policy-evaluations-artifacts]
  script:
    - sbatch --wait --partition=gpu --nodelist=zenith .gitlab-ci-scripts/slurm-dagger-run-policy-evaluations.sh
    - echo "Errors $(wc -l errors.txt)"
    - cat errors.txt
    - if [ -s errors.txt ]; then exit 1; fi

dagger-zenith-test-correctness:
  extends: [.dagger, .test-correctness-artifacts]
  script:
    - sbatch --wait --partition=gpu --nodelist=zenith .gitlab-ci-scripts/slurm-dagger-test-correctness.sh
    - echo "Errors $(wc -l errors.txt)"
    - cat errors.txt
    - if [ -s errors.txt ]; then exit 1; fi
